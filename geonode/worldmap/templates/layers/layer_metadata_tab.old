
{% extends "tab_base.html" %}

{% load i18n %}
{% load bootstrap_tags %}

{% block title %}{{ layer.typename }} â€” {{ block.super }}{% endblock %}

{% block extra_head %}
{% include 'geonode/ext_header.html' %}
<script type="text/javascript" src="{{ STATIC_URL }}worldmap/js/nicEdit.js"></script>
<style type="text/css">
    .su_only {
        display:none;
    }

    .su_only_gaz {
        display:none;
    }

.helptext {
	display: inline-block;
	font-size: 0px;
	vertical-align: top;
	width: 22px;
	height: 22px;
	background: url("img/system_help_22.png");
}

.modal_help {
	display:none;
	height:auto;
	width:auto;
	position: fixed;
	top: 25%;
	left: 50%;
	margin: 10px;
	padding: 10px;
	background-color: #ced9e7;
	border: 1px solid #000;
}

</style>
{% endblock %}

{% block body_class %}data{% endblock %}

{% block body_outer %}  
<form class="form-horizontal" action="{% url "layer_metadata" layer.typename %}" method="POST" id="worldmap_describe_form">
    <legend>
      {% blocktrans with layer.typename as layer_title %}
        Editing details for {{ layer_title }}
      {% endblocktrans %}
    </legend>
    {% if layer.metadata_uploaded %}
	<div style="background-color: orange;">{% blocktrans %}Note: this layer's orginal metadata was populated by importing a metadata XML file.
        GeoNode's metadata import supports a subset of ISO, FGDC, and Dublin Core metadata elements.
        Some of your original metadata may have been lost.{% endblocktrans %}</div>
    {% endif %}

    {% if layer_form.errors or attribute_form.errors or category_form.errors %}
	<div style="background-color: pink">{% blocktrans %}Error updating metadata.  Please check the following fields: {% endblocktrans %}
            <ul>
        {% for field in layer_form %}
            {% if field.errors %}
                <li>{{ field.label }}</li>
            {% endif %}
        {% endfor %}
        

        {% if attribute_form.errors %}
        <li>{% trans "Attributes" %}</li>
        	{% for field in attribute_form %}
            	{% if field.errors %}
                	<li>{{ field.errors }}</li>
            	{% endif %}
        	{% endfor %}
        {% endif %}        

        {%  if category_form.errors %}
        	<li>{{ category_form.errors.as_ul }}</li>
        {%  endif %}

            </ul>
        </div>
    {% endif %}
    <br/>
    {% csrf_token %}
    <div class="form-controls">
      {{ layer_form|as_bootstrap }}
    </div>
 
                <fieldset id="category_form">
                <label class="control-label required-field">{%  trans "Category"  %}</label><br/>
                    {% autoescape off %}
					<div style="clear:both;padding-left:175px;">
                    {% for choice in category_form.category_choice_field.field.choices %}
                    <div style="width:50%;float:left;padding-bottom:5px;">
                        <input type="radio" name="category_choice_field" value="{{choice.0}}"
                        {% ifequal category_form.initial choice.0 %}
                        checked="checked"
                        {% endifequal %}/>
                        <label for="" style="display:inline">{{choice.1}}</label>
                    </div>
                    {% endfor %}
					</div>
                    {% endautoescape %}

 
            </fieldset>
   
    

      
      	{%  if attribute_form.errors %}<li>{{ attribute_form.errors.as_ul }}</li>{%  endif %}
          <fieldset id="attribute_form" {% if attribute_form.hidden %}style="display:none"{% else %}style="width:800px"{% endif %}>
          <p>
            <div {% if not show_gazetteer_options  %} style="display:none" {% endif %} >
            <input type="checkbox" value="include" name="gazetteer_include" id="gazetteer_include" {% if layer.in_gazetteer %}checked="checked"{% endif %} onclick="showGazetteerOptions(this);">Include in gazetteer
            </div>
            <div class="su_only_gaz">
                Optional:
                    <table cellpadding="5" cellspacing="5" style="margin-left:20px;">
                        <tr><td colspan="2">{{gazetteer_form.project.label_tag}}: {{gazetteer_form.project}}</td></tr>

                        <tr id="start_date">
                            <td id="startDateCell" align="right" style="padding-right:10px">{{gazetteer_form.startDate.label_tag}}: {{gazetteer_form.startDate}}</td>
                            <td id="startDateFormatCell" style="display:none">{{gazetteer_form.startDateFormat.label_tag}}: {{gazetteer_form.startDateFormat}}  {%  trans "Examples: 'YYYY', 'MM/DD/YYYY', 'YYYY/MM/DD'"  %}</td>
                        </tr>

                        <tr id="end_date">
                            <td id="endDateCell" align="right" style="padding-right:10px">{{gazetteer_form.endDate.label_tag}}: {{gazetteer_form.endDate}}</td>
                            <td id="endDateFormatCell" style="display:none">{{gazetteer_form.endDateFormat.label_tag}}: {{gazetteer_form.endDateFormat}} {%  trans "Examples: 'YYYY', 'MM/DD/YYYY', 'YYYY/MM/DD'"  %} </td>
                        </tr>
                    </table>
            </div>
          </p>
          <legend>Attributes</legend>
	        {{ attribute_form.management_form }}
			<table cellpadding="5" cellspacing="5" width="100%"><tr><th>{% trans "Attribute" %}</th><th>{% trans "Label" %}</th><th>{% trans "Display Order" %}</th><th>{% trans "Visible?" %}</th><th>{% trans "Searchable?" %}</th><th class="su_only_gaz">{% trans "Add to Gazetteer?" %}</th>
	        {% for form in attribute_form.forms %}
	        	{% if form.attribute %}
	        	<tr><td>{{form.attribute}}</td><td><div style="display:none">{{form.attribute_ptr}}</div>{{form.attribute_label}}</td><td> {{form.display_order}}</td><td> {{form.visible}}</td><td> {{form.searchable}}</td></tr>
	        	{% endif %}
	        {% endfor %}
	        </table>
        </fieldset>      
      {% autoescape off %}
      <script type="text/javascript">
	     Ext.Ajax.timeout = 120000;
	     var ajaxSubmit = function() {
	         Ext.MessageBox.wait('Saving ...');
	         var htmlAbstract = myNicEditor.instanceById("id_layer-abstract").getContent();
	         document.getElementById("id_layer-abstract").value = htmlAbstract;
	         Ext.Ajax.request({
	             url: "/layers/{{layer.typename}}/metadata",
	             method: 'POST',
	             params : Ext.Ajax.serializeForm(Ext.get("worldmap_describe_form")),
	             success: function(response, options) {

	                     var geoEx = window.app;
	                     console.log("got geoEx");
	                     var LayerRec = Ext.data.Record.create([{name: 'title', name: 'name', name: 'tiled', name: 'bbox'}]);
	                     console.log("got LayerRed");
	                     var thisLayerRec = new LayerRec({title: '{{ layer.title|escape }}', name: '{{ layer.typename }}', tiled: true, bbox: '{{ layer.bbox_string }}'});
	                     console.log("got thisLayerRec");
	                     //geoEx.reloadWorldMapSource([thisLayerRec]);
	                     geoEx.addWorldMapLayers([thisLayerRec]);
	                     console.log("added WorldMapLayers");
	                     
	                	 console.log("try to get update  panel");
	                     var tabPanel = Ext.getCmp("worldmap_update_panel");
	                     console.log("got update  panel");
	                     if (tabPanel)
	                    	 tabPanel.load({url:'/layers/upload/tab'});
	                     console.log("try to get create  panel");
	                     tabPanel =  Ext.getCmp("worldmap_create_panel");
	                     console.log("got create  panel");
	                     if (tabPanel)
	                    	 tabPanel.load({url:'/layers/create_pg_layer?tab=true'});
	                     console.log("done with panels");	                     
	                     

	                 Ext.MessageBox.hide();
	             },
	             failure: function(response, options)
	             {
	                 Ext.MessageBox.hide();
	                 var uPanel = Ext.getCmp("{{ tab }}");
	                 uPanel.update(response.responseText, true);

	                 Ext.Msg.show({
	                     title: gettext("Error"),
	                     msg: gettext("Please review your submission and correct the indicated problems."),
	                     minWidth: 200,
	                     modal: true,
	                     icon: Ext.Msg.ERROR,
	                     buttons: Ext.Msg.OK
	                 });
	                 uPanel.body.scrollTo('top',0);
	             },
	             scope: this
	         });
	     }	           
	     var nicEditIconsPath = "{{ STATIC_URL }}worldmap/img/nicEditorIcons.gif"
		 var myNicEditor = new nicEditor({fullPanel : true,  maxHeight: 190, iconsPath: nicEditIconsPath}).panelInstance("id_layer-abstract");

      </script>
      {% endautoescape %}
    <div class="form-actions" style="text-align:center">
      <input type="submit" class="btn btn-primary" value="{% trans "Update" %}" onclick="ajaxSubmit();return false;"/>
    </div>
  </form>
<div id="modalhelp" class="modal_help"></div>
{% endblock %}
{% block extra_script %}
 {% include 'metadata_form_js.html' %} 
  <script type="text/javascript">
		function hideModal() {
			$("#modalhelp").css("display","none");
		}
		function showModal(text) {
			$("#modalhelp").css("display","block").html(text);
		}
		function showHelp(event) {
			showModal(event.target.innerHTML);
		}

		$(document).ready(function() {
     		{% autoescape off %}
         		$(".helptext").on('mouseover',showHelp);
     			$(".helptext").on('mouseout',hideModal);
         	{% endautoescape %}
 		});

    
 </script>
{% endblock %}
